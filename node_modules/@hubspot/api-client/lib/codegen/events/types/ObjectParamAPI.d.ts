import { HttpInfo } from '../http/http';
import { Configuration, ConfigurationOptions } from '../configuration';
import { CollectionResponseExternalUnifiedEvent } from '../models/CollectionResponseExternalUnifiedEvent';
import { VisibleExternalEventTypeNames } from '../models/VisibleExternalEventTypeNames';
import { EventsApiRequestFactory, EventsApiResponseProcessor } from "../apis/EventsApi";
export interface EventsApiGetPageRequest {
    objectType?: string;
    eventType?: string;
    after?: string;
    before?: string;
    limit?: number;
    sort?: Array<string>;
    occurredAfter?: Date;
    occurredBefore?: Date;
    objectId?: number;
    objectPropertyPropname?: any;
    propertyPropname?: any;
    id?: Array<string>;
}
export interface EventsApiGetTypesRequest {
}
export declare class ObjectEventsApi {
    private api;
    constructor(configuration: Configuration, requestFactory?: EventsApiRequestFactory, responseProcessor?: EventsApiResponseProcessor);
    getPageWithHttpInfo(param?: EventsApiGetPageRequest, options?: ConfigurationOptions): Promise<HttpInfo<CollectionResponseExternalUnifiedEvent>>;
    getPage(param?: EventsApiGetPageRequest, options?: ConfigurationOptions): Promise<CollectionResponseExternalUnifiedEvent>;
    getTypesWithHttpInfo(param?: EventsApiGetTypesRequest, options?: ConfigurationOptions): Promise<HttpInfo<VisibleExternalEventTypeNames>>;
    getTypes(param?: EventsApiGetTypesRequest, options?: ConfigurationOptions): Promise<VisibleExternalEventTypeNames>;
}
