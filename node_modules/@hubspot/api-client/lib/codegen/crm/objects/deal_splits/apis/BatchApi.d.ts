import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { BatchInputPublicObjectId } from '../models/BatchInputPublicObjectId';
import { BatchResponseDealToDealSplits } from '../models/BatchResponseDealToDealSplits';
import { BatchResponseDealToDealSplitsWithErrors } from '../models/BatchResponseDealToDealSplitsWithErrors';
import { PublicDealSplitsBatchCreateRequest } from '../models/PublicDealSplitsBatchCreateRequest';
export declare class BatchApiRequestFactory extends BaseAPIRequestFactory {
    read(batchInputPublicObjectId: BatchInputPublicObjectId, _options?: Configuration): Promise<RequestContext>;
    upsert(publicDealSplitsBatchCreateRequest: PublicDealSplitsBatchCreateRequest, _options?: Configuration): Promise<RequestContext>;
}
export declare class BatchApiResponseProcessor {
    readWithHttpInfo(response: ResponseContext): Promise<HttpInfo<BatchResponseDealToDealSplits | BatchResponseDealToDealSplitsWithErrors>>;
    upsertWithHttpInfo(response: ResponseContext): Promise<HttpInfo<BatchResponseDealToDealSplits | BatchResponseDealToDealSplitsWithErrors>>;
}
