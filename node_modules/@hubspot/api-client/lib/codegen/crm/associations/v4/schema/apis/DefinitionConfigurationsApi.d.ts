import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { BatchInputPublicAssociationDefinitionConfigurationCreateRequest } from '../models/BatchInputPublicAssociationDefinitionConfigurationCreateRequest';
import { BatchInputPublicAssociationDefinitionConfigurationUpdateRequest } from '../models/BatchInputPublicAssociationDefinitionConfigurationUpdateRequest';
import { BatchInputPublicAssociationSpec } from '../models/BatchInputPublicAssociationSpec';
import { BatchResponsePublicAssociationDefinitionConfigurationUpdateResult } from '../models/BatchResponsePublicAssociationDefinitionConfigurationUpdateResult';
import { BatchResponsePublicAssociationDefinitionConfigurationUpdateResultWithErrors } from '../models/BatchResponsePublicAssociationDefinitionConfigurationUpdateResultWithErrors';
import { BatchResponsePublicAssociationDefinitionUserConfiguration } from '../models/BatchResponsePublicAssociationDefinitionUserConfiguration';
import { BatchResponsePublicAssociationDefinitionUserConfigurationWithErrors } from '../models/BatchResponsePublicAssociationDefinitionUserConfigurationWithErrors';
import { CollectionResponsePublicAssociationDefinitionUserConfigurationNoPaging } from '../models/CollectionResponsePublicAssociationDefinitionUserConfigurationNoPaging';
export declare class DefinitionConfigurationsApiRequestFactory extends BaseAPIRequestFactory {
    batchCreate(fromObjectType: string, toObjectType: string, batchInputPublicAssociationDefinitionConfigurationCreateRequest: BatchInputPublicAssociationDefinitionConfigurationCreateRequest, _options?: Configuration): Promise<RequestContext>;
    batchRemove(fromObjectType: string, toObjectType: string, batchInputPublicAssociationSpec: BatchInputPublicAssociationSpec, _options?: Configuration): Promise<RequestContext>;
    batchUpdate(fromObjectType: string, toObjectType: string, batchInputPublicAssociationDefinitionConfigurationUpdateRequest: BatchInputPublicAssociationDefinitionConfigurationUpdateRequest, _options?: Configuration): Promise<RequestContext>;
    getAll(_options?: Configuration): Promise<RequestContext>;
    getAllBetweenTwoObjectTypes(fromObjectType: string, toObjectType: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class DefinitionConfigurationsApiResponseProcessor {
    batchCreateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<BatchResponsePublicAssociationDefinitionUserConfigurationWithErrors | BatchResponsePublicAssociationDefinitionUserConfiguration>>;
    batchRemoveWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    batchUpdateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<BatchResponsePublicAssociationDefinitionConfigurationUpdateResult | BatchResponsePublicAssociationDefinitionConfigurationUpdateResultWithErrors>>;
    getAllWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CollectionResponsePublicAssociationDefinitionUserConfigurationNoPaging>>;
    getAllBetweenTwoObjectTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CollectionResponsePublicAssociationDefinitionUserConfigurationNoPaging>>;
}
