import { HttpInfo } from '../http/http';
import { Configuration, ConfigurationOptions } from '../configuration';
import { Observable } from '../rxjsStub';
import { ActionResponseWithSingleResultURI } from '../models/ActionResponseWithSingleResultURI';
import { PublicExportRequest } from '../models/PublicExportRequest';
import { TaskLocator } from '../models/TaskLocator';
import { PublicExportsApiRequestFactory, PublicExportsApiResponseProcessor } from "../apis/PublicExportsApi";
export declare class ObservablePublicExportsApi {
    private requestFactory;
    private responseProcessor;
    private configuration;
    constructor(configuration: Configuration, requestFactory?: PublicExportsApiRequestFactory, responseProcessor?: PublicExportsApiResponseProcessor);
    getStatusWithHttpInfo(taskId: number, _options?: ConfigurationOptions): Observable<HttpInfo<ActionResponseWithSingleResultURI>>;
    getStatus(taskId: number, _options?: ConfigurationOptions): Observable<ActionResponseWithSingleResultURI>;
    startWithHttpInfo(publicExportRequest: PublicExportRequest, _options?: ConfigurationOptions): Observable<HttpInfo<TaskLocator>>;
    start(publicExportRequest: PublicExportRequest, _options?: ConfigurationOptions): Observable<TaskLocator>;
}
