import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { ActionResponseWithSingleResultURI } from '../models/ActionResponseWithSingleResultURI';
import { PublicExportRequest } from '../models/PublicExportRequest';
import { TaskLocator } from '../models/TaskLocator';
export declare class PublicExportsApiRequestFactory extends BaseAPIRequestFactory {
    getStatus(taskId: number, _options?: Configuration): Promise<RequestContext>;
    start(publicExportRequest: PublicExportRequest, _options?: Configuration): Promise<RequestContext>;
}
export declare class PublicExportsApiResponseProcessor {
    getStatusWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ActionResponseWithSingleResultURI>>;
    startWithHttpInfo(response: ResponseContext): Promise<HttpInfo<TaskLocator>>;
}
