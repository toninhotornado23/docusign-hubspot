import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { AggregateEmailStatistics } from '../models/AggregateEmailStatistics';
import { CollectionResponseWithTotalEmailStatisticIntervalNoPaging } from '../models/CollectionResponseWithTotalEmailStatisticIntervalNoPaging';
export declare class StatisticsApiRequestFactory extends BaseAPIRequestFactory {
    getEmailsList(startTimestamp?: string, endTimestamp?: string, emailIds?: Array<number>, property?: string, _options?: Configuration): Promise<RequestContext>;
    getHistogram(interval?: 'YEAR' | 'QUARTER' | 'MONTH' | 'WEEK' | 'DAY' | 'HOUR' | 'QUARTER_HOUR' | 'MINUTE' | 'SECOND', startTimestamp?: string, endTimestamp?: string, emailIds?: Array<number>, _options?: Configuration): Promise<RequestContext>;
}
export declare class StatisticsApiResponseProcessor {
    getEmailsListWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AggregateEmailStatistics>>;
    getHistogramWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CollectionResponseWithTotalEmailStatisticIntervalNoPaging>>;
}
