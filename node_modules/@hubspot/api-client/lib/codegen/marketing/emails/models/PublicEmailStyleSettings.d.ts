import { PublicButtonStyleSettings } from '../models/PublicButtonStyleSettings';
import { PublicDividerStyleSettings } from '../models/PublicDividerStyleSettings';
import { PublicFontStyle } from '../models/PublicFontStyle';
export declare class PublicEmailStyleSettings {
    'emailBodyPadding'?: string;
    'colorPickerFavorite5'?: string;
    'bodyColor'?: string;
    'colorPickerFavorite6'?: string;
    'backgroundImage'?: string;
    'emailBodyWidth'?: string;
    'secondaryFont'?: string;
    'primaryAccentColor'?: string;
    'colorPickerFavorite3'?: string;
    'primaryFontLineHeight'?: string;
    'colorPickerFavorite4'?: string;
    'secondaryFontColor'?: string;
    'colorPickerFavorite1'?: string;
    'colorPickerFavorite2'?: string;
    'bodyBorderColor'?: string;
    'bodyBorderWidth'?: number;
    'linksFont'?: PublicFontStyle;
    'backgroundColor'?: string;
    'backgroundImageType'?: string;
    'dividerStyleSettings'?: PublicDividerStyleSettings;
    'secondaryAccentColor'?: string;
    'secondaryFontLineHeight'?: string;
    'primaryFontSize'?: number;
    'secondaryFontSize'?: number;
    'primaryFontColor'?: string;
    'headingOneFont'?: PublicFontStyle;
    'primaryFont'?: string;
    'headingTwoFont'?: PublicFontStyle;
    'buttonStyleSettings'?: PublicButtonStyleSettings;
    'bodyBorderColorChoice'?: string;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
