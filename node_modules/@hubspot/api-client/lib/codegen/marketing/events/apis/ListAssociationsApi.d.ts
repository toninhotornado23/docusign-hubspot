import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { CollectionResponseWithTotalPublicListNoPaging } from '../models/CollectionResponseWithTotalPublicListNoPaging';
export declare class ListAssociationsApiRequestFactory extends BaseAPIRequestFactory {
    associateByExternalAccountAndEventIds(externalAccountId: string, externalEventId: string, listId: string, _options?: Configuration): Promise<RequestContext>;
    associateByMarketingEventId(marketingEventId: string, listId: string, _options?: Configuration): Promise<RequestContext>;
    disassociateByExternalAccountAndEventIds(externalAccountId: string, externalEventId: string, listId: string, _options?: Configuration): Promise<RequestContext>;
    disassociateByMarketingEventId(marketingEventId: string, listId: string, _options?: Configuration): Promise<RequestContext>;
    getAllByExternalAccountAndEventIds(externalAccountId: string, externalEventId: string, _options?: Configuration): Promise<RequestContext>;
    getAllByMarketingEventId(marketingEventId: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class ListAssociationsApiResponseProcessor {
    associateByExternalAccountAndEventIdsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    associateByMarketingEventIdWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    disassociateByExternalAccountAndEventIdsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    disassociateByMarketingEventIdWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    getAllByExternalAccountAndEventIdsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CollectionResponseWithTotalPublicListNoPaging>>;
    getAllByMarketingEventIdWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CollectionResponseWithTotalPublicListNoPaging>>;
}
