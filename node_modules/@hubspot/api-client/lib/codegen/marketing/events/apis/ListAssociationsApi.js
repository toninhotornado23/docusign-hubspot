"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListAssociationsApiResponseProcessor = exports.ListAssociationsApiRequestFactory = void 0;
const baseapi_1 = require("./baseapi");
const http_1 = require("../http/http");
const ObjectSerializer_1 = require("../models/ObjectSerializer");
const exception_1 = require("./exception");
const util_1 = require("../util");
class ListAssociationsApiRequestFactory extends baseapi_1.BaseAPIRequestFactory {
    associateByExternalAccountAndEventIds(externalAccountId, externalEventId, listId, _options) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            let _config = _options || this.configuration;
            if (externalAccountId === null || externalAccountId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "associateByExternalAccountAndEventIds", "externalAccountId");
            }
            if (externalEventId === null || externalEventId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "associateByExternalAccountAndEventIds", "externalEventId");
            }
            if (listId === null || listId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "associateByExternalAccountAndEventIds", "listId");
            }
            const localVarPath = '/marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists/{listId}'
                .replace('{' + 'externalAccountId' + '}', encodeURIComponent(String(externalAccountId)))
                .replace('{' + 'externalEventId' + '}', encodeURIComponent(String(externalEventId)))
                .replace('{' + 'listId' + '}', encodeURIComponent(String(listId)));
            const requestContext = _config.baseServer.makeRequestContext(localVarPath, http_1.HttpMethod.PUT);
            requestContext.setHeaderParam("Accept", "application/json, */*;q=0.8");
            let authMethod;
            authMethod = _config.authMethods["oauth2"];
            if (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication) {
                yield (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication(requestContext));
            }
            const defaultAuth = (_a = _config === null || _config === void 0 ? void 0 : _config.authMethods) === null || _a === void 0 ? void 0 : _a.default;
            if (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication) {
                yield (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication(requestContext));
            }
            return requestContext;
        });
    }
    associateByMarketingEventId(marketingEventId, listId, _options) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            let _config = _options || this.configuration;
            if (marketingEventId === null || marketingEventId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "associateByMarketingEventId", "marketingEventId");
            }
            if (listId === null || listId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "associateByMarketingEventId", "listId");
            }
            const localVarPath = '/marketing/v3/marketing-events/associations/{marketingEventId}/lists/{listId}'
                .replace('{' + 'marketingEventId' + '}', encodeURIComponent(String(marketingEventId)))
                .replace('{' + 'listId' + '}', encodeURIComponent(String(listId)));
            const requestContext = _config.baseServer.makeRequestContext(localVarPath, http_1.HttpMethod.PUT);
            requestContext.setHeaderParam("Accept", "application/json, */*;q=0.8");
            let authMethod;
            authMethod = _config.authMethods["oauth2"];
            if (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication) {
                yield (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication(requestContext));
            }
            const defaultAuth = (_a = _config === null || _config === void 0 ? void 0 : _config.authMethods) === null || _a === void 0 ? void 0 : _a.default;
            if (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication) {
                yield (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication(requestContext));
            }
            return requestContext;
        });
    }
    disassociateByExternalAccountAndEventIds(externalAccountId, externalEventId, listId, _options) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            let _config = _options || this.configuration;
            if (externalAccountId === null || externalAccountId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "disassociateByExternalAccountAndEventIds", "externalAccountId");
            }
            if (externalEventId === null || externalEventId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "disassociateByExternalAccountAndEventIds", "externalEventId");
            }
            if (listId === null || listId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "disassociateByExternalAccountAndEventIds", "listId");
            }
            const localVarPath = '/marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists/{listId}'
                .replace('{' + 'externalAccountId' + '}', encodeURIComponent(String(externalAccountId)))
                .replace('{' + 'externalEventId' + '}', encodeURIComponent(String(externalEventId)))
                .replace('{' + 'listId' + '}', encodeURIComponent(String(listId)));
            const requestContext = _config.baseServer.makeRequestContext(localVarPath, http_1.HttpMethod.DELETE);
            requestContext.setHeaderParam("Accept", "application/json, */*;q=0.8");
            let authMethod;
            authMethod = _config.authMethods["oauth2"];
            if (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication) {
                yield (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication(requestContext));
            }
            const defaultAuth = (_a = _config === null || _config === void 0 ? void 0 : _config.authMethods) === null || _a === void 0 ? void 0 : _a.default;
            if (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication) {
                yield (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication(requestContext));
            }
            return requestContext;
        });
    }
    disassociateByMarketingEventId(marketingEventId, listId, _options) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            let _config = _options || this.configuration;
            if (marketingEventId === null || marketingEventId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "disassociateByMarketingEventId", "marketingEventId");
            }
            if (listId === null || listId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "disassociateByMarketingEventId", "listId");
            }
            const localVarPath = '/marketing/v3/marketing-events/associations/{marketingEventId}/lists/{listId}'
                .replace('{' + 'marketingEventId' + '}', encodeURIComponent(String(marketingEventId)))
                .replace('{' + 'listId' + '}', encodeURIComponent(String(listId)));
            const requestContext = _config.baseServer.makeRequestContext(localVarPath, http_1.HttpMethod.DELETE);
            requestContext.setHeaderParam("Accept", "application/json, */*;q=0.8");
            let authMethod;
            authMethod = _config.authMethods["oauth2"];
            if (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication) {
                yield (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication(requestContext));
            }
            const defaultAuth = (_a = _config === null || _config === void 0 ? void 0 : _config.authMethods) === null || _a === void 0 ? void 0 : _a.default;
            if (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication) {
                yield (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication(requestContext));
            }
            return requestContext;
        });
    }
    getAllByExternalAccountAndEventIds(externalAccountId, externalEventId, _options) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            let _config = _options || this.configuration;
            if (externalAccountId === null || externalAccountId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "getAllByExternalAccountAndEventIds", "externalAccountId");
            }
            if (externalEventId === null || externalEventId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "getAllByExternalAccountAndEventIds", "externalEventId");
            }
            const localVarPath = '/marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists'
                .replace('{' + 'externalAccountId' + '}', encodeURIComponent(String(externalAccountId)))
                .replace('{' + 'externalEventId' + '}', encodeURIComponent(String(externalEventId)));
            const requestContext = _config.baseServer.makeRequestContext(localVarPath, http_1.HttpMethod.GET);
            requestContext.setHeaderParam("Accept", "application/json, */*;q=0.8");
            let authMethod;
            authMethod = _config.authMethods["oauth2"];
            if (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication) {
                yield (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication(requestContext));
            }
            const defaultAuth = (_a = _config === null || _config === void 0 ? void 0 : _config.authMethods) === null || _a === void 0 ? void 0 : _a.default;
            if (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication) {
                yield (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication(requestContext));
            }
            return requestContext;
        });
    }
    getAllByMarketingEventId(marketingEventId, _options) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            let _config = _options || this.configuration;
            if (marketingEventId === null || marketingEventId === undefined) {
                throw new baseapi_1.RequiredError("ListAssociationsApi", "getAllByMarketingEventId", "marketingEventId");
            }
            const localVarPath = '/marketing/v3/marketing-events/associations/{marketingEventId}/lists'
                .replace('{' + 'marketingEventId' + '}', encodeURIComponent(String(marketingEventId)));
            const requestContext = _config.baseServer.makeRequestContext(localVarPath, http_1.HttpMethod.GET);
            requestContext.setHeaderParam("Accept", "application/json, */*;q=0.8");
            let authMethod;
            authMethod = _config.authMethods["oauth2"];
            if (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication) {
                yield (authMethod === null || authMethod === void 0 ? void 0 : authMethod.applySecurityAuthentication(requestContext));
            }
            const defaultAuth = (_a = _config === null || _config === void 0 ? void 0 : _config.authMethods) === null || _a === void 0 ? void 0 : _a.default;
            if (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication) {
                yield (defaultAuth === null || defaultAuth === void 0 ? void 0 : defaultAuth.applySecurityAuthentication(requestContext));
            }
            return requestContext;
        });
    }
}
exports.ListAssociationsApiRequestFactory = ListAssociationsApiRequestFactory;
class ListAssociationsApiResponseProcessor {
    associateByExternalAccountAndEventIdsWithHttpInfo(response) {
        return __awaiter(this, void 0, void 0, function* () {
            const contentType = ObjectSerializer_1.ObjectSerializer.normalizeMediaType(response.headers["content-type"]);
            if ((0, util_1.isCodeInRange)("204", response.httpStatusCode)) {
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, undefined);
            }
            if ((0, util_1.isCodeInRange)("0", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "Error", "");
                throw new exception_1.ApiException(response.httpStatusCode, "An error occurred.", body, response.headers);
            }
            if (response.httpStatusCode >= 200 && response.httpStatusCode <= 299) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "void", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            throw new exception_1.ApiException(response.httpStatusCode, "Unknown API Status Code!", yield response.getBodyAsAny(), response.headers);
        });
    }
    associateByMarketingEventIdWithHttpInfo(response) {
        return __awaiter(this, void 0, void 0, function* () {
            const contentType = ObjectSerializer_1.ObjectSerializer.normalizeMediaType(response.headers["content-type"]);
            if ((0, util_1.isCodeInRange)("204", response.httpStatusCode)) {
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, undefined);
            }
            if ((0, util_1.isCodeInRange)("0", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "Error", "");
                throw new exception_1.ApiException(response.httpStatusCode, "An error occurred.", body, response.headers);
            }
            if (response.httpStatusCode >= 200 && response.httpStatusCode <= 299) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "void", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            throw new exception_1.ApiException(response.httpStatusCode, "Unknown API Status Code!", yield response.getBodyAsAny(), response.headers);
        });
    }
    disassociateByExternalAccountAndEventIdsWithHttpInfo(response) {
        return __awaiter(this, void 0, void 0, function* () {
            const contentType = ObjectSerializer_1.ObjectSerializer.normalizeMediaType(response.headers["content-type"]);
            if ((0, util_1.isCodeInRange)("204", response.httpStatusCode)) {
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, undefined);
            }
            if ((0, util_1.isCodeInRange)("0", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "Error", "");
                throw new exception_1.ApiException(response.httpStatusCode, "An error occurred.", body, response.headers);
            }
            if (response.httpStatusCode >= 200 && response.httpStatusCode <= 299) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "void", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            throw new exception_1.ApiException(response.httpStatusCode, "Unknown API Status Code!", yield response.getBodyAsAny(), response.headers);
        });
    }
    disassociateByMarketingEventIdWithHttpInfo(response) {
        return __awaiter(this, void 0, void 0, function* () {
            const contentType = ObjectSerializer_1.ObjectSerializer.normalizeMediaType(response.headers["content-type"]);
            if ((0, util_1.isCodeInRange)("204", response.httpStatusCode)) {
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, undefined);
            }
            if ((0, util_1.isCodeInRange)("0", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "Error", "");
                throw new exception_1.ApiException(response.httpStatusCode, "An error occurred.", body, response.headers);
            }
            if (response.httpStatusCode >= 200 && response.httpStatusCode <= 299) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "void", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            throw new exception_1.ApiException(response.httpStatusCode, "Unknown API Status Code!", yield response.getBodyAsAny(), response.headers);
        });
    }
    getAllByExternalAccountAndEventIdsWithHttpInfo(response) {
        return __awaiter(this, void 0, void 0, function* () {
            const contentType = ObjectSerializer_1.ObjectSerializer.normalizeMediaType(response.headers["content-type"]);
            if ((0, util_1.isCodeInRange)("200", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "CollectionResponseWithTotalPublicListNoPaging", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            if ((0, util_1.isCodeInRange)("0", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "Error", "");
                throw new exception_1.ApiException(response.httpStatusCode, "An error occurred.", body, response.headers);
            }
            if (response.httpStatusCode >= 200 && response.httpStatusCode <= 299) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "CollectionResponseWithTotalPublicListNoPaging", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            throw new exception_1.ApiException(response.httpStatusCode, "Unknown API Status Code!", yield response.getBodyAsAny(), response.headers);
        });
    }
    getAllByMarketingEventIdWithHttpInfo(response) {
        return __awaiter(this, void 0, void 0, function* () {
            const contentType = ObjectSerializer_1.ObjectSerializer.normalizeMediaType(response.headers["content-type"]);
            if ((0, util_1.isCodeInRange)("200", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "CollectionResponseWithTotalPublicListNoPaging", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            if ((0, util_1.isCodeInRange)("0", response.httpStatusCode)) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "Error", "");
                throw new exception_1.ApiException(response.httpStatusCode, "An error occurred.", body, response.headers);
            }
            if (response.httpStatusCode >= 200 && response.httpStatusCode <= 299) {
                const body = ObjectSerializer_1.ObjectSerializer.deserialize(ObjectSerializer_1.ObjectSerializer.parse(yield response.body.text(), contentType), "CollectionResponseWithTotalPublicListNoPaging", "");
                return new http_1.HttpInfo(response.httpStatusCode, response.headers, response.body, body);
            }
            throw new exception_1.ApiException(response.httpStatusCode, "Unknown API Status Code!", yield response.getBodyAsAny(), response.headers);
        });
    }
}
exports.ListAssociationsApiResponseProcessor = ListAssociationsApiResponseProcessor;
//# sourceMappingURL=ListAssociationsApi.js.map