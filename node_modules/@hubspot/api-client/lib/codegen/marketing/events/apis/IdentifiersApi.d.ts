import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { CollectionResponseSearchPublicResponseWrapperNoPaging } from '../models/CollectionResponseSearchPublicResponseWrapperNoPaging';
import { CollectionResponseWithTotalMarketingEventIdentifiersResponseNoPaging } from '../models/CollectionResponseWithTotalMarketingEventIdentifiersResponseNoPaging';
export declare class IdentifiersApiRequestFactory extends BaseAPIRequestFactory {
    doSearch(q: string, _options?: Configuration): Promise<RequestContext>;
    searchPortalEvents(externalEventId: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class IdentifiersApiResponseProcessor {
    doSearchWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CollectionResponseSearchPublicResponseWrapperNoPaging>>;
    searchPortalEventsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CollectionResponseWithTotalMarketingEventIdentifiersResponseNoPaging>>;
}
